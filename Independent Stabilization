//Jacob Hanson-Flores

#include <Wire.h>
#include "Adafruit_Sensor.h"
#include "Adafruit_BNO055.h"
#include "utility/imumaths.h"
#include "Servo.h"
#include <Time.h>
#include <TimeLib.h>

Adafruit_BNO055 bno = Adafruit_BNO055(55);
imu::Vector<3> GYROSCOPE  = bno.getVector(Adafruit_BNO055::VECTOR_GYROSCOPE);
imu::Vector<3> ACCELEROMETER  = bno.getVector(Adafruit_BNO055::VECTOR_ACCELEROMETER);
sensors_event_t event;
Servo MyServo;  //First Motor
Servo MyServo2; //Second Motor
int LeftLED = 13; //First LED
int RightLED = 12; //Second LED
//int MiddleLED = 11; //Middle LED

void setup(void) //This void setup was taken from Begad and Romans Code. It simply tells the arduino where the servo motors are attached and prints out a statement if the
//orientation sensor is not detected.
{  

  MyServo.attach(9);// Attach Motor
  MyServo2.attach(10);
  Serial.begin(9600);
  Serial.println("Orientation Sensor Test"); Serial.println("");
  pinMode(LeftLED, OUTPUT);
  /* Initialise the sensor */
  if(!bno.begin())
  {
    /* There was a problem detecting the BNO055 ... check your connections */
    Serial.print("Ooops, no BNO055 detected ... Check your wiring or I2C ADDR!");
    while(1);
  }
  
  delay(1000);
  bno.setExtCrystalUse(true);
delay(100);
}


void loop(void) 
{
  float bacon = event.orientation.x; //sets start as the angular position while the rocket is still on the pad.
  Serial.print("start"); //Prints out the angular position
  int y = 1;
  while (y==1)
  { //This while loop was taken from Roman and Begads code and it loops until the accelerometer detects that the accerlation is greater than the acceleration
  //due to gravity meaning that the rocket has left the launch pad
    int z = ACCELEROMETER.z()-9;
    Serial.print(" Z: ");
    Serial.print(z);
    Serial.println("");
      if (z >0)
      {
        y = 0; //If z > acceleration due to gravity(~-9) sets y=0 and the while loop ends.
      } //End of Begad and Roman's code
  }
  delay(3000); //Tells the arduino to wait 3 seconds before moving on
  float height, dheight=1; //declares 2 variables that will be used later in our loop to calculate if we have a positive change in vertical position aka are we
  //ascending?
    while(dheight <= 0)
      {
        whereweat(bacon); //Runs the whereweat function to maintain the same orientation that the rocket had on the launch pad until
        //the change in height becomes negative.
        height = event.orientation.y; //Sets the height to current height
        dheight = event.orientation.y - height; //Checks the height again and compares the difference from the value just measured to make sure we are still ascending
      }
    }

  void reset() //This function tells our servos to return the flaps back to their original position.
{
  MyServo.write(90);
  MyServo2.write(90);
}

void douknowzeway(float z) //This function will be used to tell our servos which direction to turn
                            //based on the direction of our thetavector
  {
    float l; //sets up a float which will represent the theta vector
    l = z;  //Sets l to the theta vector which was the argument for our function
    if(l >= 0) // If the theta vector is a positive value turn the servos to 105 degrees. 
      {
        MyServo.write(105);
        MyServo2.write(105);
      }
    else //If the theta vector, l, is a negative value turn the flaps 15 degrees in the opposite direction
    {
      MyServo.write(75);
      MyServo2.write(75);
    }
    delay(100);//Waits 100 milliseconds after telling the servo to move and then returns it to its original orientation
    reset(); //After turning the flaps immediately resets the flaps to their original orientation
  }

void whereweat(float x1) //takes in a pointer to an array which has the positions we are hoping to hold
{
  /* Get a new sensor event */ 
  float x = event.orientation.x; //sets x = current position in x
  float vert = event.orientation.y;
  float theta, dtheta, dvert=1, goalz = x1; //declares these variables as floats goalz = the position at argument x1 which is our goal to achieve
  while(dvert >= 0)
      vert = event.orientation.y; //sets vert to the current height
      dvert = event.orientation.y - vert; //sets dvert to current height-the height of vert just taken in
      theta = event.orientation.x; //sets theta to our current position
      dtheta = pow(theta-goalz,2); //sets dtheta to the difference between the position we want to be at, and our current x,
                                          //then squares the value so its always positive
      if (dtheta > 225) //if the change in our angular orientation is greater than 15 degrees or dtheta is > 225 (which is 15^2)
        {float thetavector = GYROSCOPE.x(); //gets the angular vector to use in our douknowzeway function
         douknowzeway(thetavector); //Feeds the current theta vector to our function. 
          //Which then turns the servos in the appropriate direction
        }
}
